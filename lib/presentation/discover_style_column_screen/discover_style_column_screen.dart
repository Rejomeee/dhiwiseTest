import '../discover_style_column_screen/widgets/userprofilestac1_item_widget.dart';import 'bloc/discover_style_column_bloc.dart';import 'models/discover_style_column_model.dart';import 'models/userprofilestac1_item_model.dart';import 'package:arone_jerome_s_application1/core/app_export.dart';import 'package:arone_jerome_s_application1/presentation/all_friends_page/all_friends_page.dart';import 'package:arone_jerome_s_application1/presentation/discover_page/discover_page.dart';import 'package:arone_jerome_s_application1/presentation/message_main_page/message_main_page.dart';import 'package:arone_jerome_s_application1/presentation/notifications_page/notifications_page.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_image.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_subtitle_1.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:arone_jerome_s_application1/widgets/custom_bottom_bar.dart';import 'package:arone_jerome_s_application1/widgets/custom_floating_button.dart';import 'package:arone_jerome_s_application1/widgets/custom_search_view.dart';import 'package:flutter/material.dart';import 'package:flutter_staggered_grid_view/flutter_staggered_grid_view.dart';
// ignore_for_file: must_be_immutable
class DiscoverStyleColumnScreen extends StatelessWidget {DiscoverStyleColumnScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<DiscoverStyleColumnBloc>(create: (context) => DiscoverStyleColumnBloc(DiscoverStyleColumnState(discoverStyleColumnModelObj: DiscoverStyleColumnModel()))..add(DiscoverStyleColumnInitialEvent()), child: DiscoverStyleColumnScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: CustomAppBar(leadingWidth: 51.h, leading: AppbarImage(svgPath: ImageConstant.imgArrowleft, margin: EdgeInsets.only(left: 20.h, top: 17.v, bottom: 10.v), onTap: () {onTapArrowleftone(context);}), centerTitle: true, title: AppbarSubtitle1(text: "lbl_style_column".tr)), body: SizedBox(width: double.maxFinite, child: Column(mainAxisSize: MainAxisSize.min, children: [SizedBox(height: 10.v), Expanded(child: SingleChildScrollView(child: Padding(padding: EdgeInsets.only(left: 2.h), child: Column(children: [BlocSelector<DiscoverStyleColumnBloc, DiscoverStyleColumnState, TextEditingController?>(selector: (state) => state.searchController, builder: (context, searchController) {return CustomSearchView(margin: EdgeInsets.only(left: 28.h, right: 31.h), controller: searchController, hintText: "lbl_search_a_topic".tr, prefix: Container(margin: EdgeInsets.fromLTRB(10.h, 5.v, 10.h, 7.v), child: CustomImageView(svgPath: ImageConstant.imgDiscovericon)), prefixConstraints: BoxConstraints(maxHeight: 42.v), suffix: Padding(padding: EdgeInsets.only(right: 15.h), child: IconButton(onPressed: () {searchController!.clear();}, icon: Icon(Icons.clear, color: Colors.grey.shade600))));}), SizedBox(height: 27.v), BlocSelector<DiscoverStyleColumnBloc, DiscoverStyleColumnState, DiscoverStyleColumnModel?>(selector: (state) => state.discoverStyleColumnModelObj, builder: (context, discoverStyleColumnModelObj) {return StaggeredGridView.countBuilder(shrinkWrap: true, primary: false, crossAxisCount: 4, crossAxisSpacing: 13.h, mainAxisSpacing: 13.h, staggeredTileBuilder: (index) {return StaggeredTile.fit(2);}, itemCount: discoverStyleColumnModelObj?.userprofilestac1ItemList.length ?? 0, itemBuilder: (context, index) {Userprofilestac1ItemModel model = discoverStyleColumnModelObj?.userprofilestac1ItemList[index] ?? Userprofilestac1ItemModel(); return Userprofilestac1ItemWidget(model, onTapImgUserImage: () {onTapImgUserImage(context);});});}), SizedBox(height: 15.v), SizedBox(height: 90.v, width: 314.h, child: Stack(alignment: Alignment.centerLeft, children: [CustomImageView(imagePath: ImageConstant.img490x314, height: 90.v, width: 314.h, radius: BorderRadius.circular(10.h), alignment: Alignment.center), Align(alignment: Alignment.centerLeft, child: Container(width: 120.h, margin: EdgeInsets.only(left: 16.h), child: Text("msg_how_can_i_style".tr, maxLines: 4, overflow: TextOverflow.ellipsis, style: theme.textTheme.titleSmall!.copyWith(height: 1.13))))])), SizedBox(height: 15.v), Container(height: 69.v, width: 373.h, decoration: BoxDecoration(color: theme.colorScheme.onPrimaryContainer.withOpacity(1)))]))))])), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}), floatingActionButton: CustomFloatingButton(height: 45, width: 45, backgroundColor: appTheme.gray100, child: CustomImageView(svgPath: ImageConstant.imgPlus, height: 22.5.v, width: 22.5.h)))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Dashboard: return AppRoutes.notificationsPage; case BottomBarEnum.Mystylin: return AppRoutes.allFriendsPage; case BottomBarEnum.Upload: return "/"; case BottomBarEnum.Messages: return AppRoutes.messageMainPage; case BottomBarEnum.Discover: return AppRoutes.discoverPage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.notificationsPage: return NotificationsPage.builder(context); case AppRoutes.allFriendsPage: return AllFriendsPage.builder(context); case AppRoutes.messageMainPage: return MessageMainPage.builder(context); case AppRoutes.discoverPage: return DiscoverPage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the discoverStyleColumnInnerPageScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the discoverStyleColumnInnerPageScreen.
onTapImgUserImage(BuildContext context) { NavigatorService.pushNamed(AppRoutes.discoverStyleColumnInnerPageScreen); } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapArrowleftone(BuildContext context) { NavigatorService.goBack(); } 
 }
