import 'bloc/password_valid_bloc.dart';import 'models/password_valid_model.dart';import 'package:arone_jerome_s_application1/core/app_export.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_image.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_image_1.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_subtitle_1.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:arone_jerome_s_application1/widgets/custom_checkbox_button.dart';import 'package:flutter/material.dart';class PasswordValidScreen extends StatelessWidget {const PasswordValidScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<PasswordValidBloc>(create: (context) => PasswordValidBloc(PasswordValidState(passwordValidModelObj: PasswordValidModel()))..add(PasswordValidInitialEvent()), child: PasswordValidScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: CustomAppBar(leadingWidth: 51.h, leading: AppbarImage(svgPath: ImageConstant.imgArrowleft, margin: EdgeInsets.only(left: 20.h, top: 17.v, bottom: 10.v), onTap: () {onTapArrowleftone(context);}), centerTitle: true, title: AppbarSubtitle1(text: "lbl_password2".tr), actions: [Container(margin: EdgeInsets.fromLTRB(15.h, 10.v, 15.h, 6.v), padding: EdgeInsets.symmetric(horizontal: 6.h, vertical: 7.v), decoration: AppDecoration.fillOnPrimaryContainer, child: AppbarImage1(svgPath: ImageConstant.imgGetstyliniconssendBlack900, margin: EdgeInsets.only(right: 1.h)))], styleType: Style.bgFill_1), body: SizedBox(width: double.maxFinite, child: Column(children: [Container(margin: EdgeInsets.only(left: 30.h, top: 15.v, right: 30.h), padding: EdgeInsets.symmetric(vertical: 1.v), decoration: AppDecoration.fillOnPrimaryContainer, child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [Padding(padding: EdgeInsets.only(left: 12.h, top: 4.v), child: Text("lbl2".tr, style: theme.textTheme.headlineSmall)), SizedBox(height: 4.v), Divider(color: appTheme.lightGreen400.withOpacity(0.2))])), Container(margin: EdgeInsets.symmetric(horizontal: 30.h), padding: EdgeInsets.symmetric(vertical: 1.v), decoration: AppDecoration.fillOnPrimaryContainer, child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [Padding(padding: EdgeInsets.only(left: 12.h, top: 4.v), child: Text("lbl3".tr, style: theme.textTheme.headlineSmall)), SizedBox(height: 4.v), Divider(color: appTheme.lightGreen400.withOpacity(0.2))])), Container(margin: EdgeInsets.symmetric(horizontal: 30.h), padding: EdgeInsets.symmetric(vertical: 1.v), decoration: AppDecoration.fillOnPrimaryContainer, child: Column(mainAxisAlignment: MainAxisAlignment.center, children: [BlocSelector<PasswordValidBloc, PasswordValidState, bool?>(selector: (state) => state.checkmark, builder: (context, checkmark) {return CustomCheckboxButton(width: 298.h, text: "lbl3".tr, value: checkmark, margin: EdgeInsets.only(left: 12.h, top: 4.v, right: 5.h), textStyle: theme.textTheme.headlineSmall, isRightCheck: true, onChange: (value) {context.read<PasswordValidBloc>().add(ChangeCheckBoxEvent(value: value));});}), SizedBox(height: 4.v), Divider(color: appTheme.lightGreen400.withOpacity(0.2))])), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 43.h, top: 22.v), child: Text("msg_forgot_password".tr, style: CustomTextStyles.bodySmallLightgreen400))), Spacer(), CustomImageView(svgPath: ImageConstant.imgVariousdevice, height: 279.v, width: 375.h)])))); } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapArrowleftone(BuildContext context) { NavigatorService.goBack(); } 
 }
