import 'bloc/rewards_rs_bloc.dart';import 'models/rewards_rs_model.dart';import 'package:arone_jerome_s_application1/core/app_export.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_image.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_subtitle_1.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:arone_jerome_s_application1/widgets/custom_checkbox_button.dart';import 'package:flutter/material.dart';class RewardsRsScreen extends StatelessWidget {const RewardsRsScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<RewardsRsBloc>(create: (context) => RewardsRsBloc(RewardsRsState(rewardsRsModelObj: RewardsRsModel()))..add(RewardsRsInitialEvent()), child: RewardsRsScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: CustomAppBar(leadingWidth: 51.h, leading: AppbarImage(svgPath: ImageConstant.imgArrowleft, margin: EdgeInsets.only(left: 20.h, top: 17.v, bottom: 10.v), onTap: () {onTapArrowleftone(context);}), centerTitle: true, title: AppbarSubtitle1(text: "lbl_my_rewards".tr)), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 24.h, vertical: 25.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Align(alignment: Alignment.center, child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(svgPath: ImageConstant.imgStylepointsicons, height: 24.v, width: 13.h), Padding(padding: EdgeInsets.only(left: 15.h), child: Text("lbl_760".tr, style: CustomTextStyles.titleLargeRaleway))])), SizedBox(height: 18.v), Align(alignment: Alignment.center, child: Text("msg_you_are_a_rising".tr, style: CustomTextStyles.titleSmallBlack900)), Align(alignment: Alignment.center, child: Container(width: 267.h, margin: EdgeInsets.only(left: 31.h, top: 10.v, right: 28.h), child: Text("msg_get_more_style_points".tr, maxLines: 3, overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: CustomTextStyles.bodySmallLight11.copyWith(height: 1.55)))), Padding(padding: EdgeInsets.only(left: 5.h, top: 21.v, right: 5.h), child: Row(children: [SizedBox(height: 48.v, width: 78.h, child: Stack(alignment: Alignment.center, children: [CustomImageView(svgPath: ImageConstant.imgStar, height: 17.adaptSize, width: 17.adaptSize, alignment: Alignment.topCenter, margin: EdgeInsets.only(top: 11.v)), Align(alignment: Alignment.center, child: Container(padding: EdgeInsets.symmetric(horizontal: 13.h, vertical: 7.v), decoration: AppDecoration.gold, child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 3.v), CustomImageView(svgPath: ImageConstant.imgArrowdownOnprimarycontainer, height: 15.v, width: 8.h), SizedBox(height: 4.v), Text("lbl_rising_star".tr, style: CustomTextStyles.labelSmallRobotoOnPrimaryContainer)])))])), GestureDetector(onTap: () {onTapColumnstylepoin(context);}, child: Container(padding: EdgeInsets.symmetric(horizontal: 15.h, vertical: 7.v), decoration: AppDecoration.outlineOnPrimaryContainer1, child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 3.v), CustomImageView(svgPath: ImageConstant.imgStylepointsicons, height: 15.v, width: 8.h), SizedBox(height: 4.v), Text("lbl_superstar".tr, style: CustomTextStyles.labelSmallRoboto)]))), Container(padding: EdgeInsets.symmetric(horizontal: 29.h, vertical: 7.v), decoration: AppDecoration.outlineOnPrimaryContainer1, child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 3.v), CustomImageView(svgPath: ImageConstant.imgStylepointsicons, height: 15.v, width: 8.h), SizedBox(height: 4.v), Text("lbl_icon".tr, style: CustomTextStyles.labelSmallRoboto)])), GestureDetector(onTap: () {onTapColumnstylepoin1(context);}, child: Container(padding: EdgeInsets.symmetric(horizontal: 23.h, vertical: 7.v), decoration: AppDecoration.outlineOnPrimaryContainer1, child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 3.v), CustomImageView(svgPath: ImageConstant.imgStylepointsicons, height: 15.v, width: 8.h), SizedBox(height: 4.v), Text("lbl_legend".tr, style: CustomTextStyles.labelSmallRoboto)])))])), Padding(padding: EdgeInsets.only(left: 7.h, top: 19.v), child: Text("lbl_tier_progress".tr, style: theme.textTheme.labelLarge)), CustomImageView(svgPath: ImageConstant.imgGroup15, height: 3.v, width: 314.h, margin: EdgeInsets.only(left: 7.h, top: 17.v)), Align(alignment: Alignment.centerRight, child: Padding(padding: EdgeInsets.only(top: 5.v, right: 6.h), child: Text("lbl_760_5000".tr, style: CustomTextStyles.robotoBlack900))), Padding(padding: EdgeInsets.only(left: 7.h, top: 21.v), child: Text("msg_rising_star_privileges".tr, style: theme.textTheme.labelLarge)), BlocSelector<RewardsRsBloc, RewardsRsState, bool?>(selector: (state) => state.checkmark, builder: (context, checkmark) {return CustomCheckboxButton(text: "msg_access_to_discounts".tr, value: checkmark, margin: EdgeInsets.only(left: 7.h, top: 22.v), padding: EdgeInsets.symmetric(vertical: 1.v), onChange: (value) {context.read<RewardsRsBloc>().add(ChangeCheckBoxEvent(value: value));});}), Padding(padding: EdgeInsets.only(top: 15.v), child: Divider(color: appTheme.lightGreen400.withOpacity(0.1), indent: 7.h)), BlocSelector<RewardsRsBloc, RewardsRsState, bool?>(selector: (state) => state.birthdayRewards, builder: (context, birthdayRewards) {return CustomCheckboxButton(text: "msg_birthday_rewards".tr, value: birthdayRewards, margin: EdgeInsets.only(left: 7.h, top: 12.v), padding: EdgeInsets.symmetric(vertical: 1.v), onChange: (value) {context.read<RewardsRsBloc>().add(ChangeCheckBox1Event(value: value));});}), Padding(padding: EdgeInsets.only(top: 15.v), child: Divider(color: appTheme.lightGreen400.withOpacity(0.1), indent: 7.h)), BlocSelector<RewardsRsBloc, RewardsRsState, bool?>(selector: (state) => state.checkmarkone, builder: (context, checkmarkone) {return CustomCheckboxButton(text: "msg_accecc_to_exclusive".tr, value: checkmarkone, margin: EdgeInsets.only(left: 7.h, top: 12.v), padding: EdgeInsets.symmetric(vertical: 1.v), onChange: (value) {context.read<RewardsRsBloc>().add(ChangeCheckBox2Event(value: value));});}), Padding(padding: EdgeInsets.only(top: 15.v), child: Divider(color: appTheme.lightGreen400.withOpacity(0.1), indent: 7.h)), BlocSelector<RewardsRsBloc, RewardsRsState, bool?>(selector: (state) => state.checkmarktwo, builder: (context, checkmarktwo) {return CustomCheckboxButton(text: "msg_access_to_exclusive".tr, value: checkmarktwo, margin: EdgeInsets.only(left: 7.h, top: 12.v), padding: EdgeInsets.symmetric(vertical: 1.v), onChange: (value) {context.read<RewardsRsBloc>().add(ChangeCheckBox3Event(value: value));});}), Padding(padding: EdgeInsets.only(top: 15.v), child: Divider(color: appTheme.lightGreen400.withOpacity(0.1), indent: 7.h)), BlocSelector<RewardsRsBloc, RewardsRsState, bool?>(selector: (state) => state.checkmarkthree, builder: (context, checkmarkthree) {return CustomCheckboxButton(text: "msg_access_to_exclusive2".tr, value: checkmarkthree, margin: EdgeInsets.only(left: 7.h, top: 11.v), padding: EdgeInsets.symmetric(vertical: 1.v), onChange: (value) {context.read<RewardsRsBloc>().add(ChangeCheckBox4Event(value: value));});}), Padding(padding: EdgeInsets.only(top: 15.v, bottom: 5.v), child: Divider(color: appTheme.lightGreen400.withOpacity(0.1), indent: 7.h))])))); } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapArrowleftone(BuildContext context) { NavigatorService.goBack(); } 
/// Navigates to the rewardsSsTabContainerScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the rewardsSsTabContainerScreen.
onTapColumnstylepoin(BuildContext context) { NavigatorService.pushNamed(AppRoutes.rewardsSsTabContainerScreen, ); } 
/// Navigates to the rewardsLeScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the rewardsLeScreen.
onTapColumnstylepoin1(BuildContext context) { NavigatorService.pushNamed(AppRoutes.rewardsLeScreen, ); } 
 }
