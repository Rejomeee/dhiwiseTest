import 'bloc/apply_to_be_a_stylist_two_bloc.dart';import 'models/apply_to_be_a_stylist_two_model.dart';import 'package:arone_jerome_s_application1/core/app_export.dart';import 'package:arone_jerome_s_application1/presentation/all_friends_page/all_friends_page.dart';import 'package:arone_jerome_s_application1/presentation/discover_page/discover_page.dart';import 'package:arone_jerome_s_application1/presentation/message_main_page/message_main_page.dart';import 'package:arone_jerome_s_application1/presentation/notifications_page/notifications_page.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_image.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_subtitle_1.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:arone_jerome_s_application1/widgets/custom_bottom_bar.dart';import 'package:arone_jerome_s_application1/widgets/custom_checkbox_button.dart';import 'package:arone_jerome_s_application1/widgets/custom_elevated_button.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class ApplyToBeAStylistTwoScreen extends StatelessWidget {ApplyToBeAStylistTwoScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<ApplyToBeAStylistTwoBloc>(create: (context) => ApplyToBeAStylistTwoBloc(ApplyToBeAStylistTwoState(applyToBeAStylistTwoModelObj: ApplyToBeAStylistTwoModel()))..add(ApplyToBeAStylistTwoInitialEvent()), child: ApplyToBeAStylistTwoScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: CustomAppBar(leadingWidth: 51.h, leading: AppbarImage(svgPath: ImageConstant.imgArrowleft, margin: EdgeInsets.only(left: 20.h, top: 17.v, bottom: 10.v), onTap: () {onTapArrowleftone(context);}), centerTitle: true, title: AppbarSubtitle1(text: "msg_apply_to_be_a_stylist2".tr), styleType: Style.bgFill_1), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 32.h, vertical: 22.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [SizedBox(height: 6.v), CustomImageView(svgPath: ImageConstant.imgProgress11x131, height: 11.v, width: 131.h, alignment: Alignment.center), SizedBox(height: 16.v), Align(alignment: Alignment.center, child: Text("lbl_personal_style".tr, style: CustomTextStyles.labelLarge_1)), SizedBox(height: 12.v), Align(alignment: Alignment.center, child: Text("msg_describe_your_personal".tr, style: CustomTextStyles.bodySmall11_1)), Padding(padding: EdgeInsets.only(left: 17.h, top: 60.v), child: Text("lbl_preference".tr, style: theme.textTheme.bodySmall)), BlocSelector<ApplyToBeAStylistTwoBloc, ApplyToBeAStylistTwoState, bool?>(selector: (state) => state.menFashion, builder: (context, menFashion) {return CustomCheckboxButton(text: "lbl_men_s_fashion".tr, value: menFashion, margin: EdgeInsets.only(left: 25.h, top: 9.v), textStyle: theme.textTheme.bodySmall, onChange: (value) {context.read<ApplyToBeAStylistTwoBloc>().add(ChangeCheckBoxEvent(value: value));});}), BlocSelector<ApplyToBeAStylistTwoBloc, ApplyToBeAStylistTwoState, bool?>(selector: (state) => state.menfashionone, builder: (context, menfashionone) {return CustomCheckboxButton(text: "lbl_women_s_fashion".tr, value: menfashionone, margin: EdgeInsets.only(left: 25.h, top: 9.v), textStyle: theme.textTheme.bodySmall, onChange: (value) {context.read<ApplyToBeAStylistTwoBloc>().add(ChangeCheckBox1Event(value: value));});}), Padding(padding: EdgeInsets.only(top: 20.v), child: Divider(indent: 1.h)), Padding(padding: EdgeInsets.only(left: 17.h, top: 15.v), child: Text("msg_describe_your_personal".tr, style: theme.textTheme.bodySmall)), Padding(padding: EdgeInsets.only(top: 81.v), child: Divider(indent: 1.h)), Padding(padding: EdgeInsets.only(left: 17.h, top: 11.v), child: Text("msg_why_do_you_want".tr, style: theme.textTheme.bodySmall)), Padding(padding: EdgeInsets.only(top: 81.v), child: Divider(indent: 1.h)), SizedBox(height: 24.v), CustomElevatedButton(width: 68.h, text: "lbl_next".tr, onTap: () {onTapNext(context);}, alignment: Alignment.centerRight)])), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Dashboard: return AppRoutes.notificationsPage; case BottomBarEnum.Mystylin: return AppRoutes.allFriendsPage; case BottomBarEnum.Upload: return "/"; case BottomBarEnum.Messages: return AppRoutes.messageMainPage; case BottomBarEnum.Discover: return AppRoutes.discoverPage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.notificationsPage: return NotificationsPage.builder(context); case AppRoutes.allFriendsPage: return AllFriendsPage.builder(context); case AppRoutes.messageMainPage: return MessageMainPage.builder(context); case AppRoutes.discoverPage: return DiscoverPage.builder(context); default: return DefaultWidget();} } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapArrowleftone(BuildContext context) { NavigatorService.goBack(); } 
/// Navigates to the applyToBeAStylistScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the applyToBeAStylistScreen.
onTapNext(BuildContext context) { NavigatorService.pushNamed(AppRoutes.applyToBeAStylistScreen, ); } 
 }
