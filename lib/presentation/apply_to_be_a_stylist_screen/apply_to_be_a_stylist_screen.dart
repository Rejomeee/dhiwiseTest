import 'bloc/apply_to_be_a_stylist_bloc.dart';import 'models/apply_to_be_a_stylist_model.dart';import 'package:arone_jerome_s_application1/core/app_export.dart';import 'package:arone_jerome_s_application1/presentation/all_friends_page/all_friends_page.dart';import 'package:arone_jerome_s_application1/presentation/discover_page/discover_page.dart';import 'package:arone_jerome_s_application1/presentation/message_main_page/message_main_page.dart';import 'package:arone_jerome_s_application1/presentation/notifications_page/notifications_page.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_image.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_subtitle_1.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:arone_jerome_s_application1/widgets/custom_bottom_bar.dart';import 'package:arone_jerome_s_application1/widgets/custom_checkbox_button.dart';import 'package:arone_jerome_s_application1/widgets/custom_elevated_button.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class ApplyToBeAStylistScreen extends StatelessWidget {ApplyToBeAStylistScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<ApplyToBeAStylistBloc>(create: (context) => ApplyToBeAStylistBloc(ApplyToBeAStylistState(applyToBeAStylistModelObj: ApplyToBeAStylistModel()))..add(ApplyToBeAStylistInitialEvent()), child: ApplyToBeAStylistScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: CustomAppBar(leadingWidth: 51.h, leading: AppbarImage(svgPath: ImageConstant.imgArrowleft, margin: EdgeInsets.only(left: 20.h, top: 17.v, bottom: 10.v), onTap: () {onTapArrowleftone(context);}), centerTitle: true, title: AppbarSubtitle1(text: "msg_apply_to_be_a_stylist2".tr), styleType: Style.bgFill_1), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 32.h, vertical: 22.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [SizedBox(height: 6.v), CustomImageView(svgPath: ImageConstant.imgProgress1, height: 11.v, width: 131.h, alignment: Alignment.center), SizedBox(height: 16.v), Align(alignment: Alignment.center, child: Text("msg_styling_experience".tr, style: CustomTextStyles.labelLarge_1)), SizedBox(height: 10.v), Align(alignment: Alignment.center, child: SizedBox(width: 210.h, child: Text("msg_do_you_have_any".tr, maxLines: 2, overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: CustomTextStyles.bodySmall11_1))), Padding(padding: EdgeInsets.only(left: 17.h, top: 47.v), child: Text("lbl_experience".tr, style: theme.textTheme.bodySmall)), BlocSelector<ApplyToBeAStylistBloc, ApplyToBeAStylistState, bool?>(selector: (state) => state.nonevalue, builder: (context, nonevalue) {return CustomCheckboxButton(text: "lbl_none".tr, value: nonevalue, margin: EdgeInsets.only(left: 25.h, top: 7.v), textStyle: theme.textTheme.bodySmall, onChange: (value) {context.read<ApplyToBeAStylistBloc>().add(ChangeCheckBoxEvent(value: value));});}), BlocSelector<ApplyToBeAStylistBloc, ApplyToBeAStylistState, bool?>(selector: (state) => state.lessThanOneYear, builder: (context, lessThanOneYear) {return CustomCheckboxButton(text: "lbl_1_year".tr, value: lessThanOneYear, margin: EdgeInsets.only(left: 25.h, top: 10.v), textStyle: theme.textTheme.bodySmall, onChange: (value) {context.read<ApplyToBeAStylistBloc>().add(ChangeCheckBox1Event(value: value));});}), BlocSelector<ApplyToBeAStylistBloc, ApplyToBeAStylistState, bool?>(selector: (state) => state.oneToFiveYears, builder: (context, oneToFiveYears) {return CustomCheckboxButton(text: "lbl_1_to_5_years".tr, value: oneToFiveYears, margin: EdgeInsets.only(left: 25.h, top: 12.v), textStyle: theme.textTheme.bodySmall, onChange: (value) {context.read<ApplyToBeAStylistBloc>().add(ChangeCheckBox2Event(value: value));});}), BlocSelector<ApplyToBeAStylistBloc, ApplyToBeAStylistState, bool?>(selector: (state) => state.moreThanFiveYea, builder: (context, moreThanFiveYea) {return CustomCheckboxButton(text: "lbl_5_years".tr, value: moreThanFiveYea, margin: EdgeInsets.only(left: 25.h, top: 9.v), textStyle: theme.textTheme.bodySmall, onChange: (value) {context.read<ApplyToBeAStylistBloc>().add(ChangeCheckBox3Event(value: value));});}), Padding(padding: EdgeInsets.only(top: 22.v), child: Divider(indent: 1.h)), Padding(padding: EdgeInsets.only(left: 17.h, top: 17.v), child: Text("msg_describe_your_experience".tr, style: theme.textTheme.bodySmall)), Spacer(), Divider(indent: 1.h), SizedBox(height: 24.v), CustomElevatedButton(width: 68.h, text: "lbl_submit".tr, alignment: Alignment.centerRight)])), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Dashboard: return AppRoutes.notificationsPage; case BottomBarEnum.Mystylin: return AppRoutes.allFriendsPage; case BottomBarEnum.Upload: return "/"; case BottomBarEnum.Messages: return AppRoutes.messageMainPage; case BottomBarEnum.Discover: return AppRoutes.discoverPage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.notificationsPage: return NotificationsPage.builder(context); case AppRoutes.allFriendsPage: return AllFriendsPage.builder(context); case AppRoutes.messageMainPage: return MessageMainPage.builder(context); case AppRoutes.discoverPage: return DiscoverPage.builder(context); default: return DefaultWidget();} } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapArrowleftone(BuildContext context) { NavigatorService.goBack(); } 
 }
