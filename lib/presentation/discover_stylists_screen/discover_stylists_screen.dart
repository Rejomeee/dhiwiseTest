import '../discover_stylists_screen/widgets/userprofilerow_item_widget.dart';import 'bloc/discover_stylists_bloc.dart';import 'models/discover_stylists_model.dart';import 'models/userprofilerow_item_model.dart';import 'package:arone_jerome_s_application1/core/app_export.dart';import 'package:arone_jerome_s_application1/presentation/all_friends_page/all_friends_page.dart';import 'package:arone_jerome_s_application1/presentation/discover_page/discover_page.dart';import 'package:arone_jerome_s_application1/presentation/message_main_page/message_main_page.dart';import 'package:arone_jerome_s_application1/presentation/notifications_page/notifications_page.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_image.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_subtitle_1.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:arone_jerome_s_application1/widgets/custom_bottom_bar.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class DiscoverStylistsScreen extends StatelessWidget {DiscoverStylistsScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<DiscoverStylistsBloc>(create: (context) => DiscoverStylistsBloc(DiscoverStylistsState(discoverStylistsModelObj: DiscoverStylistsModel()))..add(DiscoverStylistsInitialEvent()), child: DiscoverStylistsScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: CustomAppBar(leadingWidth: 51.h, leading: AppbarImage(svgPath: ImageConstant.imgArrowleft, margin: EdgeInsets.only(left: 20.h, top: 17.v, bottom: 10.v), onTap: () {onTapArrowleftone(context);}), centerTitle: true, title: AppbarSubtitle1(text: "msg_meet_our_stylists".tr), styleType: Style.bgFill_1), body: SizedBox(width: double.maxFinite, child: Column(children: [SizedBox(height: 4.v), Expanded(child: SizedBox(width: double.maxFinite, child: Container(padding: EdgeInsets.symmetric(horizontal: 30.h), decoration: AppDecoration.fillOnPrimaryContainer, child: Column(mainAxisAlignment: MainAxisAlignment.end, children: [SizedBox(height: 11.v), Expanded(child: BlocSelector<DiscoverStylistsBloc, DiscoverStylistsState, DiscoverStylistsModel?>(selector: (state) => state.discoverStylistsModelObj, builder: (context, discoverStylistsModelObj) {return ListView.separated(physics: BouncingScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return Padding(padding: EdgeInsets.symmetric(vertical: 6.0.v), child: SizedBox(width: 315.h, child: Divider(height: 1.v, thickness: 1.v, color: appTheme.lightGreen400.withOpacity(0.1))));}, itemCount: discoverStylistsModelObj?.userprofilerowItemList.length ?? 0, itemBuilder: (context, index) {UserprofilerowItemModel model = discoverStylistsModelObj?.userprofilerowItemList[index] ?? UserprofilerowItemModel(); return UserprofilerowItemWidget(model);});}))])))), Container(height: 60.v, width: double.maxFinite, decoration: BoxDecoration(color: theme.colorScheme.onPrimaryContainer.withOpacity(1))), Container(height: 60.v, width: double.maxFinite, decoration: BoxDecoration(color: theme.colorScheme.onPrimaryContainer.withOpacity(1))), Container(height: 60.v, width: double.maxFinite, decoration: BoxDecoration(color: theme.colorScheme.onPrimaryContainer.withOpacity(1))), Container(height: 60.v, width: double.maxFinite, decoration: BoxDecoration(color: theme.colorScheme.onPrimaryContainer.withOpacity(1))), Container(height: 60.v, width: double.maxFinite, decoration: BoxDecoration(color: theme.colorScheme.onPrimaryContainer.withOpacity(1))), Container(height: 60.v, width: double.maxFinite, decoration: BoxDecoration(color: theme.colorScheme.onPrimaryContainer.withOpacity(1))), Container(height: 60.v, width: double.maxFinite, decoration: BoxDecoration(color: theme.colorScheme.onPrimaryContainer.withOpacity(1))), Container(height: 60.v, width: double.maxFinite, decoration: BoxDecoration(color: theme.colorScheme.onPrimaryContainer.withOpacity(1)))])), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Dashboard: return AppRoutes.notificationsPage; case BottomBarEnum.Mystylin: return AppRoutes.allFriendsPage; case BottomBarEnum.Upload: return "/"; case BottomBarEnum.Messages: return AppRoutes.messageMainPage; case BottomBarEnum.Discover: return AppRoutes.discoverPage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.notificationsPage: return NotificationsPage.builder(context); case AppRoutes.allFriendsPage: return AllFriendsPage.builder(context); case AppRoutes.messageMainPage: return MessageMainPage.builder(context); case AppRoutes.discoverPage: return DiscoverPage.builder(context); default: return DefaultWidget();} } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapArrowleftone(BuildContext context) { NavigatorService.goBack(); } 
 }
