import '../post_screen/widgets/sliderone_one_item_widget.dart';import 'bloc/post_bloc.dart';import 'models/post_model.dart';import 'models/sliderone_one_item_model.dart';import 'package:arone_jerome_s_application1/core/app_export.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_image.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_subtitle_1.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:arone_jerome_s_application1/widgets/custom_checkbox_button.dart';import 'package:arone_jerome_s_application1/widgets/custom_icon_button.dart';import 'package:carousel_slider/carousel_slider.dart';import 'package:flutter/material.dart';import 'package:smooth_page_indicator/smooth_page_indicator.dart';class PostScreen extends StatelessWidget {const PostScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<PostBloc>(create: (context) => PostBloc(PostState(postModelObj: PostModel()))..add(PostInitialEvent()), child: PostScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: CustomAppBar(leadingWidth: 51.h, leading: AppbarImage(svgPath: ImageConstant.imgArrowleft, margin: EdgeInsets.only(left: 20.h, top: 17.v, bottom: 10.v), onTap: () {onTapArrowleftone(context);}), centerTitle: true, title: AppbarSubtitle1(text: "lbl_post".tr)), body: SizedBox(width: mediaQueryData.size.width, child: SingleChildScrollView(padding: EdgeInsets.only(top: 12.v), child: Column(children: [Padding(padding: EdgeInsets.only(left: 29.h, right: 22.h), child: Row(crossAxisAlignment: CrossAxisAlignment.end, mainAxisSize: MainAxisSize.min, children: [CustomImageView(imagePath: ImageConstant.imgLocation25x25, height: 25.adaptSize, width: 25.adaptSize, margin: EdgeInsets.only(top: 5.v, bottom: 2.v)), Padding(padding: EdgeInsets.only(left: 12.h, top: 4.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_grace_kelly".tr, style: CustomTextStyles.titleSmallBlack90014), Text("msg_brooklyn_new_york".tr, style: CustomTextStyles.bodySmallOnError)])), Spacer(), CustomImageView(svgPath: ImageConstant.imgGroup, height: 2.v, width: 14.h, margin: EdgeInsets.only(top: 16.v, right: 9.h, bottom: 14.v))])), SizedBox(height: 17.v), SizedBox(height: 270.v, width: 316.h, child: Stack(alignment: Alignment.bottomCenter, children: [BlocBuilder<PostBloc, PostState>(builder: (context, state) {return CarouselSlider.builder(options: CarouselOptions(height: 270.v, initialPage: 0, autoPlay: true, viewportFraction: 1.0, enableInfiniteScroll: false, scrollDirection: Axis.horizontal, onPageChanged: (index, reason) {state.sliderIndex = index;}), itemCount: state.postModelObj?.slideroneOneItemList.length ?? 0, itemBuilder: (context, index, realIndex) {SlideroneOneItemModel model = state.postModelObj?.slideroneOneItemList[index] ?? SlideroneOneItemModel(); return SlideroneOneItemWidget(model);});}), Align(alignment: Alignment.bottomCenter, child: BlocBuilder<PostBloc, PostState>(builder: (context, state) {return Container(height: 4.v, margin: EdgeInsets.only(bottom: 9.v), child: AnimatedSmoothIndicator(activeIndex: state.sliderIndex, count: state.postModelObj?.slideroneOneItemList.length ?? 0, axisDirection: Axis.horizontal, effect: ScrollingDotsEffect(spacing: 8, activeDotColor: theme.colorScheme.onPrimaryContainer.withOpacity(1), dotColor: theme.colorScheme.onPrimaryContainer, dotHeight: 4.v, dotWidth: 4.h)));}))])), Padding(padding: EdgeInsets.only(left: 27.h, top: 12.v, right: 29.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgCtaLightGreen400, height: 35.v, width: 115.h), CustomImageView(svgPath: ImageConstant.imgGetstyliniconsthumbs, height: 14.adaptSize, width: 14.adaptSize, margin: EdgeInsets.only(left: 42.h, top: 6.v, bottom: 15.v)), Padding(padding: EdgeInsets.only(left: 7.h, top: 8.v, bottom: 15.v), child: Text("lbl_23_798".tr, style: CustomTextStyles.labelSmallGray500)), CustomImageView(svgPath: ImageConstant.imgGetstyliniconsthumbsGray500, height: 14.adaptSize, width: 14.adaptSize, margin: EdgeInsets.only(left: 20.h, top: 6.v, bottom: 15.v)), Padding(padding: EdgeInsets.only(left: 7.h, top: 8.v, bottom: 15.v), child: Text("lbl_121".tr, style: CustomTextStyles.labelSmallGray500)), CustomImageView(svgPath: ImageConstant.imgGetstyliniconscomment, height: 13.adaptSize, width: 13.adaptSize, margin: EdgeInsets.only(left: 17.h, top: 6.v, bottom: 15.v)), Padding(padding: EdgeInsets.only(left: 7.h, top: 8.v, bottom: 15.v), child: Text("lbl_5_458".tr, style: CustomTextStyles.labelSmallGray500))])), Align(alignment: Alignment.centerLeft, child: Container(height: 31.v, width: 302.h, margin: EdgeInsets.only(left: 30.h, top: 14.v), child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.bottomRight, child: Padding(padding: EdgeInsets.only(right: 2.h, bottom: 2.v), child: Text("lbl_6h".tr, style: CustomTextStyles.bodySmallGray5008))), Align(alignment: Alignment.center, child: SizedBox(width: 302.h, child: Text("msg_lorem_ipsum_dolor".tr, maxLines: 2, overflow: TextOverflow.ellipsis, style: theme.textTheme.bodySmall)))]))), Align(alignment: Alignment.centerLeft, child: Container(width: 205.h, margin: EdgeInsets.only(left: 30.h, top: 5.v), child: Text("msg_streetwear_gucci".tr, maxLines: 2, overflow: TextOverflow.ellipsis, style: CustomTextStyles.bodySmallLightgreen400_1))), SizedBox(height: 11.v), SizedBox(height: 368.v, width: double.maxFinite, child: Stack(alignment: Alignment.topCenter, children: [Align(alignment: Alignment.center, child: Container(padding: EdgeInsets.symmetric(horizontal: 28.h, vertical: 6.v), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.end, children: [Align(alignment: Alignment.centerLeft, child: Container(height: 79.v, width: 295.h, margin: EdgeInsets.only(left: 4.h), child: Stack(alignment: Alignment.bottomRight, children: [Align(alignment: Alignment.topLeft, child: BlocSelector<PostBloc, PostState, bool?>(selector: (state) => state.marilynmonroe, builder: (context, marilynmonroe) {return CustomCheckboxButton(alignment: Alignment.topLeft, text: "lbl_marilyn_monroe".tr, value: marilynmonroe, textStyle: CustomTextStyles.titleSmallBlack90014, onChange: (value) {context.read<PostBloc>().add(ChangeCheckBoxEvent(value: value));});})), Align(alignment: Alignment.bottomRight, child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, children: [SizedBox(width: 256.h, child: Text("msg_lorem_ipsum_dolor2".tr, maxLines: 3, overflow: TextOverflow.ellipsis, style: theme.textTheme.bodySmall)), SizedBox(height: 3.v), RichText(text: TextSpan(children: [TextSpan(text: "lbl_2h".tr, style: CustomTextStyles.labelMediumPrimary), TextSpan(text: "  ".tr), TextSpan(text: "msg_reply_edit_delete".tr, style: CustomTextStyles.labelMediumLightgreen400)]), textAlign: TextAlign.left)]))]))), Container(height: 95.v, width: 257.h, margin: EdgeInsets.only(top: 15.v, right: 18.h), child: Stack(alignment: Alignment.bottomRight, children: [Align(alignment: Alignment.topLeft, child: BlocSelector<PostBloc, PostState, bool?>(selector: (state) => state.audreyhepburn, builder: (context, audreyhepburn) {return CustomCheckboxButton(alignment: Alignment.topLeft, text: "lbl_audrey_hepburn".tr, value: audreyhepburn, padding: EdgeInsets.symmetric(vertical: 1.v), textStyle: CustomTextStyles.titleSmallBlack90014, onChange: (value) {context.read<PostBloc>().add(ChangeCheckBox1Event(value: value));});})), Align(alignment: Alignment.bottomRight, child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, children: [SizedBox(width: 228.h, child: Text("msg_lorem_ipsum_dolor2".tr, maxLines: 1, overflow: TextOverflow.ellipsis, style: theme.textTheme.bodySmall)), SizedBox(height: 41.v), RichText(text: TextSpan(children: [TextSpan(text: "lbl_2h".tr, style: CustomTextStyles.labelMediumPrimary), TextSpan(text: "  ".tr), TextSpan(text: "msg_reply_edit_delete2".tr, style: CustomTextStyles.labelMediumLightgreen400)]), textAlign: TextAlign.left)]))])), BlocSelector<PostBloc, PostState, bool?>(selector: (state) => state.princessdiana, builder: (context, princessdiana) {return CustomCheckboxButton(text: "lbl_princess_diana".tr, value: princessdiana, margin: EdgeInsets.only(left: 43.h, top: 15.v), textStyle: CustomTextStyles.titleSmallBlack90014, onChange: (value) {context.read<PostBloc>().add(ChangeCheckBox2Event(value: value));});}), Container(width: 237.h, margin: EdgeInsets.only(left: 72.h, right: 9.h), child: Text("msg_lorem_ipsum_dolor2".tr, maxLines: null, overflow: TextOverflow.ellipsis, style: theme.textTheme.bodySmall)), Padding(padding: EdgeInsets.only(top: 14.v, right: 26.h, bottom: 55.v), child: RichText(text: TextSpan(children: [TextSpan(text: "lbl_2h".tr, style: CustomTextStyles.labelMediumPrimary), TextSpan(text: "  ".tr), TextSpan(text: "msg_reply_edit_delete2".tr, style: CustomTextStyles.labelMediumLightgreen400)]), textAlign: TextAlign.left))]))), Align(alignment: Alignment.topCenter, child: Container(margin: EdgeInsets.only(left: 1.h, top: 87.v), padding: EdgeInsets.symmetric(vertical: 1.v), child: Column(mainAxisSize: MainAxisSize.min, children: [Divider(color: theme.colorScheme.onError), Padding(padding: EdgeInsets.fromLTRB(32.h, 3.v, 24.h, 6.v), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [BlocSelector<PostBloc, PostState, bool?>(selector: (state) => state.comment, builder: (context, comment) {return CustomCheckboxButton(text: "lbl_add_comment".tr, value: comment, margin: EdgeInsets.symmetric(vertical: 7.v), padding: EdgeInsets.symmetric(vertical: 4.v), textStyle: CustomTextStyles.bodySmallGray500_1, onChange: (value) {context.read<PostBloc>().add(ChangeCheckBox3Event(value: value));});}), CustomIconButton(height: 39.v, width: 38.h, padding: EdgeInsets.all(6.h), child: CustomImageView(svgPath: ImageConstant.imgGetstyliniconssend))]))])))]))]))))); } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapArrowleftone(BuildContext context) { NavigatorService.goBack(); } 
 }
