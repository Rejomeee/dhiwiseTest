import 'bloc/help_bloc.dart';import 'models/help_model.dart';import 'package:arone_jerome_s_application1/core/app_export.dart';import 'package:arone_jerome_s_application1/presentation/all_friends_page/all_friends_page.dart';import 'package:arone_jerome_s_application1/presentation/discover_page/discover_page.dart';import 'package:arone_jerome_s_application1/presentation/message_main_page/message_main_page.dart';import 'package:arone_jerome_s_application1/presentation/notifications_page/notifications_page.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_image.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_subtitle_1.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:arone_jerome_s_application1/widgets/custom_bottom_bar.dart';import 'package:arone_jerome_s_application1/widgets/custom_drop_down.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class HelpScreen extends StatelessWidget {HelpScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<HelpBloc>(create: (context) => HelpBloc(HelpState(helpModelObj: HelpModel()))..add(HelpInitialEvent()), child: HelpScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: CustomAppBar(leadingWidth: 51.h, leading: AppbarImage(svgPath: ImageConstant.imgArrowleft, margin: EdgeInsets.only(left: 20.h, top: 17.v, bottom: 10.v), onTap: () {onTapArrowleftone(context);}), centerTitle: true, title: AppbarSubtitle1(text: "lbl_help".tr), styleType: Style.bgFill_1), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 28.h, vertical: 15.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Container(width: 317.h, padding: EdgeInsets.symmetric(horizontal: 11.h, vertical: 5.v), decoration: AppDecoration.fillSecondaryContainer.copyWith(borderRadius: BorderRadiusStyle.roundedBorder5), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 2.v), CustomImageView(svgPath: ImageConstant.imgDiscovericon, height: 30.v, width: 29.h)])), Container(margin: EdgeInsets.only(left: 2.h, top: 16.v), padding: EdgeInsets.symmetric(vertical: 1.v), decoration: AppDecoration.fillOnPrimaryContainer, child: Column(mainAxisAlignment: MainAxisAlignment.end, children: [Padding(padding: EdgeInsets.only(left: 11.h, top: 13.v, right: 16.h), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_getting_started".tr, style: theme.textTheme.bodyMedium), CustomImageView(svgPath: ImageConstant.imgArrowup, height: 7.v, width: 13.h, margin: EdgeInsets.only(top: 3.v, bottom: 4.v))])), SizedBox(height: 10.v), Divider(color: appTheme.lightGreen400.withOpacity(0.2))])), Container(width: 273.h, margin: EdgeInsets.only(left: 14.h, top: 9.v, right: 31.h), child: RichText(text: TextSpan(children: [TextSpan(text: "msg_lorem_ipsum_dolor4".tr, style: CustomTextStyles.bodySmallGray500Light_1), TextSpan(text: "msg_ut_enim_ad_minim".tr, style: CustomTextStyles.bodySmallGray500Light_1)]), textAlign: TextAlign.left)), BlocSelector<HelpBloc, HelpState, HelpModel?>(selector: (state) => state.helpModelObj, builder: (context, helpModelObj) {return CustomDropDown(icon: Container(margin: EdgeInsets.fromLTRB(30.h, 17.v, 16.h, 17.v), child: CustomImageView(svgPath: ImageConstant.imgArrowdownBlack900)), margin: EdgeInsets.only(left: 2.h, top: 11.v), hintText: "msg_how_to_earn_more".tr, items: helpModelObj?.dropdownItemList ?? [], onChanged: (value) {context.read<HelpBloc>().add(ChangeDropDownEvent(value: value));});}), BlocSelector<HelpBloc, HelpState, HelpModel?>(selector: (state) => state.helpModelObj, builder: (context, helpModelObj) {return CustomDropDown(icon: Container(margin: EdgeInsets.fromLTRB(30.h, 18.v, 16.h, 18.v), child: CustomImageView(svgPath: ImageConstant.imgArrowdownBlack900)), margin: EdgeInsets.only(left: 2.h), hintText: "msg_changing_my_account".tr, items: helpModelObj?.dropdownItemList1 ?? [], onChanged: (value) {context.read<HelpBloc>().add(ChangeDropDown1Event(value: value));});}), BlocSelector<HelpBloc, HelpState, HelpModel?>(selector: (state) => state.helpModelObj, builder: (context, helpModelObj) {return CustomDropDown(icon: Container(margin: EdgeInsets.fromLTRB(30.h, 18.v, 16.h, 18.v), child: CustomImageView(svgPath: ImageConstant.imgArrowdownBlack900)), margin: EdgeInsets.only(left: 2.h), hintText: "lbl_posting_content".tr, items: helpModelObj?.dropdownItemList2 ?? [], onChanged: (value) {context.read<HelpBloc>().add(ChangeDropDown2Event(value: value));});}), BlocSelector<HelpBloc, HelpState, HelpModel?>(selector: (state) => state.helpModelObj, builder: (context, helpModelObj) {return CustomDropDown(icon: Container(margin: EdgeInsets.fromLTRB(30.h, 18.v, 16.h, 18.v), child: CustomImageView(svgPath: ImageConstant.imgArrowdownBlack900)), margin: EdgeInsets.only(left: 2.h), hintText: "msg_becoming_a_stylist".tr, items: helpModelObj?.dropdownItemList3 ?? [], onChanged: (value) {context.read<HelpBloc>().add(ChangeDropDown3Event(value: value));});}), BlocSelector<HelpBloc, HelpState, HelpModel?>(selector: (state) => state.helpModelObj, builder: (context, helpModelObj) {return CustomDropDown(icon: Container(margin: EdgeInsets.fromLTRB(30.h, 18.v, 16.h, 18.v), child: CustomImageView(svgPath: ImageConstant.imgArrowdownBlack900)), margin: EdgeInsets.only(left: 2.h), hintText: "msg_inviting_a_friend".tr, items: helpModelObj?.dropdownItemList4 ?? [], onChanged: (value) {context.read<HelpBloc>().add(ChangeDropDown4Event(value: value));});}), BlocSelector<HelpBloc, HelpState, HelpModel?>(selector: (state) => state.helpModelObj, builder: (context, helpModelObj) {return CustomDropDown(icon: Container(margin: EdgeInsets.fromLTRB(30.h, 18.v, 16.h, 18.v), child: CustomImageView(svgPath: ImageConstant.imgArrowdownBlack900)), margin: EdgeInsets.only(left: 2.h), hintText: "msg_toggling_privacy".tr, items: helpModelObj?.dropdownItemList5 ?? [], onChanged: (value) {context.read<HelpBloc>().add(ChangeDropDown5Event(value: value));});}), SizedBox(height: 23.v), Align(alignment: Alignment.center, child: RichText(text: TextSpan(children: [TextSpan(text: "msg_don_t_see_your_question2".tr, style: CustomTextStyles.labelSmallBlack900_1), TextSpan(text: "msg_info_getstylin_com".tr, style: theme.textTheme.labelSmall)]), textAlign: TextAlign.left))])), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Dashboard: return AppRoutes.notificationsPage; case BottomBarEnum.Mystylin: return AppRoutes.allFriendsPage; case BottomBarEnum.Upload: return "/"; case BottomBarEnum.Messages: return AppRoutes.messageMainPage; case BottomBarEnum.Discover: return AppRoutes.discoverPage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.notificationsPage: return NotificationsPage.builder(context); case AppRoutes.allFriendsPage: return AllFriendsPage.builder(context); case AppRoutes.messageMainPage: return MessageMainPage.builder(context); case AppRoutes.discoverPage: return DiscoverPage.builder(context); default: return DefaultWidget();} } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapArrowleftone(BuildContext context) { NavigatorService.goBack(); } 
 }
