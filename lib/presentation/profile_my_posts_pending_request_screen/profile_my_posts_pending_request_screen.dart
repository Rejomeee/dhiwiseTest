import '../profile_my_posts_pending_request_screen/widgets/staggeredone_item_widget.dart';import 'bloc/profile_my_posts_pending_request_bloc.dart';import 'models/profile_my_posts_pending_request_model.dart';import 'models/staggeredone_item_model.dart';import 'package:arone_jerome_s_application1/core/app_export.dart';import 'package:arone_jerome_s_application1/presentation/all_friends_page/all_friends_page.dart';import 'package:arone_jerome_s_application1/presentation/discover_page/discover_page.dart';import 'package:arone_jerome_s_application1/presentation/message_main_page/message_main_page.dart';import 'package:arone_jerome_s_application1/presentation/notifications_page/notifications_page.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_image.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_image_2.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_image_3.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_subtitle_6.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/appbar_subtitle_7.dart';import 'package:arone_jerome_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:arone_jerome_s_application1/widgets/custom_bottom_bar.dart';import 'package:flutter/material.dart';import 'package:flutter_staggered_grid_view/flutter_staggered_grid_view.dart';
// ignore_for_file: must_be_immutable
class ProfileMyPostsPendingRequestScreen extends StatelessWidget {ProfileMyPostsPendingRequestScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<ProfileMyPostsPendingRequestBloc>(create: (context) => ProfileMyPostsPendingRequestBloc(ProfileMyPostsPendingRequestState(profileMyPostsPendingRequestModelObj: ProfileMyPostsPendingRequestModel()))..add(ProfileMyPostsPendingRequestInitialEvent()), child: ProfileMyPostsPendingRequestScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: CustomAppBar(height: 60.v, leadingWidth: 54.h, leading: AppbarImage(svgPath: ImageConstant.imgArrowleft, margin: EdgeInsets.only(left: 44.h), onTap: () {onTapArrowleftone(context);}), centerTitle: true, title: AppbarImage2(svgPath: ImageConstant.imgMystylin), actions: [AppbarSubtitle7(text: "lbl_my_style".tr, margin: EdgeInsets.fromLTRB(1.h, 8.v, 3.h, 3.v)), AppbarImage3(svgPath: ImageConstant.imgBookmarkLightGreen40018x18, margin: EdgeInsets.only(left: 18.h, top: 5.v, right: 3.h)), AppbarSubtitle6(text: "lbl_favorites".tr, margin: EdgeInsets.fromLTRB(7.h, 8.v, 48.h, 3.v))]), body: SizedBox(height: 535.v, width: double.maxFinite, child: Stack(alignment: Alignment.centerLeft, children: [BlocSelector<ProfileMyPostsPendingRequestBloc, ProfileMyPostsPendingRequestState, ProfileMyPostsPendingRequestModel?>(selector: (state) => state.profileMyPostsPendingRequestModelObj, builder: (context, profileMyPostsPendingRequestModelObj) {return StaggeredGridView.countBuilder(shrinkWrap: true, primary: false, crossAxisCount: 4, crossAxisSpacing: 11.h, mainAxisSpacing: 11.h, staggeredTileBuilder: (index) {return StaggeredTile.fit(2);}, itemCount: profileMyPostsPendingRequestModelObj?.staggeredoneItemList.length ?? 0, itemBuilder: (context, index) {StaggeredoneItemModel model = profileMyPostsPendingRequestModelObj?.staggeredoneItemList[index] ?? StaggeredoneItemModel(); return StaggeredoneItemWidget(model);});}), Align(alignment: Alignment.centerLeft, child: Container(height: 668.v, width: 86.h, decoration: BoxDecoration(color: appTheme.lightGreen400.withOpacity(0.05)))), Align(alignment: Alignment.topLeft, child: Container(height: 3.adaptSize, width: 3.adaptSize, margin: EdgeInsets.only(left: 143.h, top: 87.v), decoration: BoxDecoration(color: theme.colorScheme.onPrimaryContainer.withOpacity(1), borderRadius: BorderRadius.circular(1.h)))), Align(alignment: Alignment.topRight, child: Padding(padding: EdgeInsets.only(top: 111.v, right: 43.h), child: Row(mainAxisAlignment: MainAxisAlignment.end, mainAxisSize: MainAxisSize.min, children: [Container(padding: EdgeInsets.symmetric(horizontal: 28.h, vertical: 5.v), decoration: AppDecoration.fillLightGreen.copyWith(borderRadius: BorderRadiusStyle.roundedBorder5), child: Text("lbl_message".tr, style: CustomTextStyles.labelSmallOnPrimaryContainer)), Container(margin: EdgeInsets.only(left: 10.h), padding: EdgeInsets.symmetric(horizontal: 18.h, vertical: 5.v), decoration: AppDecoration.white.copyWith(borderRadius: BorderRadiusStyle.roundedBorder5), child: Text("lbl_more".tr, style: theme.textTheme.labelSmall))]))), Align(alignment: Alignment.topLeft, child: Padding(padding: EdgeInsets.only(left: 47.h, top: 15.v), child: Row(children: [CustomImageView(imagePath: ImageConstant.img583x60, height: 83.v, width: 60.h, radius: BorderRadius.circular(10.h)), Padding(padding: EdgeInsets.only(left: 32.h, top: 6.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_audrey_faye".tr, style: theme.textTheme.labelLarge), Container(width: 167.h, margin: EdgeInsets.only(left: 1.h, top: 4.v), child: Text("msg_i_favor_pearls_on".tr, maxLines: 2, overflow: TextOverflow.ellipsis, style: CustomTextStyles.bodySmallLight_1.copyWith(height: 1.33))), Padding(padding: EdgeInsets.only(left: 1.h, top: 4.v), child: Row(children: [CustomImageView(svgPath: ImageConstant.imgLocationGray500, height: 12.v, width: 7.h, margin: EdgeInsets.only(bottom: 4.v)), Padding(padding: EdgeInsets.only(left: 8.h), child: Text("msg_mnl_philippines".tr, style: CustomTextStyles.bodySmallGray500Light)), CustomImageView(svgPath: ImageConstant.imgArrowdown, height: 12.v, width: 6.h, margin: EdgeInsets.only(left: 23.h, bottom: 2.v)), Padding(padding: EdgeInsets.only(left: 7.h), child: Text("lbl_760".tr, style: CustomTextStyles.bodySmallGray500Light))]))]))]))), Align(alignment: Alignment.topLeft, child: Container(margin: EdgeInsets.only(left: 46.h, top: 111.v), padding: EdgeInsets.symmetric(horizontal: 30.h, vertical: 5.v), decoration: AppDecoration.fillLightGreen.copyWith(borderRadius: BorderRadiusStyle.roundedBorder5), child: Text("lbl_accept".tr, style: CustomTextStyles.labelSmallOnPrimaryContainer)))])), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Dashboard: return AppRoutes.notificationsPage; case BottomBarEnum.Mystylin: return AppRoutes.allFriendsPage; case BottomBarEnum.Upload: return "/"; case BottomBarEnum.Messages: return AppRoutes.messageMainPage; case BottomBarEnum.Discover: return AppRoutes.discoverPage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.notificationsPage: return NotificationsPage.builder(context); case AppRoutes.allFriendsPage: return AllFriendsPage.builder(context); case AppRoutes.messageMainPage: return MessageMainPage.builder(context); case AppRoutes.discoverPage: return DiscoverPage.builder(context); default: return DefaultWidget();} } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapArrowleftone(BuildContext context) { NavigatorService.goBack(); } 
 }
